import sys
import os
import math

black = '000000000000000000000000'
white = '111111111111111111111111'
red   = '111111110000000000000000'
green = '000000001111111100000000'
blue  = '000000000000000011111111'

def distance(p1,p2):
    r1 = int(p1[0:8],2)
    g1 = int(p1[8:16],2)
    b1 = int(p1[16:24],2)

    r2 = int(p2[0:8],2)
    g2 = int(p2[8:16],2)
    b2 = int(p2[16:24],2)

    #print "%d %d %d || %d %d %d" % (r1,g1,b1,r2,g2,b2)

    d = math.sqrt(float( ((r1 - r2)**2) + ((g1-g2)**2) + ((b1-b2)**2) ))
    # d = float( ((r1 - r2)**2) + ((g1-g2)**2) + ((b1-b2)**2) )
    # d = ( ((r1 - r2)**2) + ((g1-g2)**2) + ((b1-b2)**2) )**(1/2)
    # print d
    return d

def ClosestColor(hexcodes):

    r = []
    for pixel in hexcodes:
        d = {
            'Black' : distance(pixel,black),
            'White' : distance(pixel,white),
            'Red'   : distance(pixel,red),
            'Green' : distance(pixel,green),
            'Blue'  : distance(pixel,blue)
        }
        mind = None
        minv = 100000000L
        for k in d.keys():
            # print "d[%s] = %i" % (k,d[k])
            if d[k] == minv:
                mind = 'Ambiguous'
                break
            if d[k] < minv:
                minv = d[k]
                mind = k
        r.append(mind)
    return r


_hexcodes_cnt = 0
_hexcodes_cnt = int(raw_input())
_hexcodes_i = 0
_hexcodes = []

while _hexcodes_i < _hexcodes_cnt:
    _hexcodes_item = raw_input()
    _hexcodes.append(_hexcodes_item)
    _hexcodes_i += 1

print ClosestColor(_hexcodes);

